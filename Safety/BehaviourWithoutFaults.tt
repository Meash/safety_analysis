<#@ template inherits="Safety.ProgramGraphDsl.ProgramGraphTransformation" hostspecific="true" #>
<#@ output encoding="us-ascii" extension=".smv" #>
<#@ assembly Name="Safety.ProgramGraphDsl.dll" #>

<#=  TransformToNuSMV() #>

DEFINE 
	GP := 0;
	SP := 35;
	SchrankeZu := v.V_Winkel = 0;
	SchrankeOffen := v.V_Winkel = 2;
	ZugAmGefahrenpunkt := v.V_PositionReal >= GP & v.V_PositionReal < GP + v.V_vReal; -- Interval
	ZugAmSensorpunkt := v.V_PositionReal >= SP & v.V_PositionReal < SP + v.V_vReal; -- Interval
	KeinFehler := (v.V_Sensor_Fehler = L_No 
				& v.V_BahnuebergangFunksender_Fehler = L_No 
				& v.V_Zugbremse_Fehler = L_No
				& v.V_Schrankenmotor_Fehler = L_No
				& v.V_Schrankensensor_Fehler = L_No
				& v.V_ZugFunksender_Fehler = L_No
				& v.V_Zugpositionsbestimmung_Fehler = L_No);

	
-- Safety
LTLSPEC G KeinFehler -> (ZugAmGefahrenpunkt -> SchrankeZu)
LTLSPEC G KeinFehler -> (ZugAmGefahrenpunkt -> (SchrankeZu U ZugAmSensorpunkt))


-- Bahnuebergang
LTLSPEC G KeinFehler -> (SchrankeZu -> F SchrankeOffen)

---- Schranke
------ Schrankensensor
LTLSPEC G KeinFehler -> (G (SchrankeZu -> X v.V_Schrankensensor = L_Geschlossen)) -- X due to state machine timing
LTLSPEC G KeinFehler -> (G (SchrankeOffen -> X v.V_Schrankensensor = L_Offen))


---- Sensor
LTLSPEC G KeinFehler -> G (ZugAmSensorpunkt -> (
				(X v.V_Sensor = L_ZugFaehrtDurch) 
				& (v.V_Sensor = L_ZugFaehrtDurch U v.V_Sensor = L_KeinZug)))


-- Funk
CTLSPEC AG KeinFehler -> (
		EF v.V_ZugFunksender = L_SicherungsAnweisungGesendet 
			-> AF v.V_BahnuebergangFunkempfaenger = L_SicherungsAnweisungAngekommen)
CTLSPEC AG KeinFehler -> (
		EF v.V_ZugFunksender = L_AnfrageGesendet 
			-> AF v.V_BahnuebergangFunkempfaenger = L_ZustandsAnfrageAngekommen)
CTLSPEC AG KeinFehler -> (
		EF v.V_BahnuebergangFunksender = L_BestaetigungsNachrichtGesendet 
			-> AF v.V_ZugFunkempfaenger = L_SicherungsBestaetigungErhalten)


-- Zug
---- Bremse
LTLSPEC G (v.V_Zugbremse = L_Bremsend -> F v.V_vReal = 0)

---- Zugpositionsbestimmung
LTLSPEC G KeinFehler -> 
		-- alle kommen vor
		(v.V_Zugpositionsbestimmung = L_AufFreierStrecke
		& X F (v.V_Zugpositionsbestimmung = L_EinschaltpunktErreicht 
		& X F (v.V_Zugpositionsbestimmung = L_NachEinschaltpunkt 
		& X F (v.V_Zugpositionsbestimmung = L_AnfragepunktErreicht 
		& X F (v.V_Zugpositionsbestimmung = L_NachAnfragepunkt 
		& X F (v.V_Zugpositionsbestimmung = L_BremseinsatzpunktErreicht 
		& X F (v.V_Zugpositionsbestimmung = L_NachBremseinsatzpunkt 
		& X F (v.V_Zugpositionsbestimmung = L_GefahrenpunktErreicht 
		& X F (v.V_Zugpositionsbestimmung = L_NachGefahrenpunkt 
		& X F v.V_Zugpositionsbestimmung = L_Ende))))))))
		-- nur eine Reihenfolge
		& v.V_Zugpositionsbestimmung = L_AufFreierStrecke
		U (v.V_Zugpositionsbestimmung = L_EinschaltpunktErreicht 
		U (v.V_Zugpositionsbestimmung = L_NachEinschaltpunkt 
		U (v.V_Zugpositionsbestimmung = L_AnfragepunktErreicht 
		U (v.V_Zugpositionsbestimmung = L_NachAnfragepunkt 
		U (v.V_Zugpositionsbestimmung = L_BremseinsatzpunktErreicht 
		U (v.V_Zugpositionsbestimmung = L_NachBremseinsatzpunkt 
		U (v.V_Zugpositionsbestimmung = L_GefahrenpunktErreicht 
		U (v.V_Zugpositionsbestimmung = L_NachGefahrenpunkt 
		U v.V_Zugpositionsbestimmung = L_Ende)))))))))

---- Zugsteuerung
LTLSPEC G KeinFehler
			-> ((v.V_Zugpositionsbestimmung = L_BremseinsatzpunktErreicht & SchrankeOffen)
				-> X v.V_Zugsteuerung = L_Zwangsbremsung)
